{"ast":null,"code":"var _jsxFileName = \"/home/vignesh/Vicky/Technologies/Projects/luster_project_submission/nft_staking_dapp/frontend/src/context/AppContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { ethers } from \"ethers\";\nimport { contractABI, contractAddress } from \"../utils/appUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nconst {\n  ethereum\n} = window;\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [wallet, setWallet] = useState(\"\");\n  const getEthereumContract = () => {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, contractABI, signer);\n    return contract;\n  };\n  const connectWallet = async () => {\n    if (!ethereum) {\n      alert(\"please download metamask\");\n      return;\n    }\n    const accounts = await ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    setWallet(accounts[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      wallet,\n      connectWallet,\n      getEthereumContract\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"rHKEFfasQxMGjJoZ36SKorQWXQ0=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","ethers","contractABI","contractAddress","jsxDEV","_jsxDEV","AppContext","ethereum","window","AppProvider","children","_s","wallet","setWallet","getEthereumContract","provider","providers","Web3Provider","signer","getSigner","contract","Contract","connectWallet","alert","accounts","request","method","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vignesh/Vicky/Technologies/Projects/luster_project_submission/nft_staking_dapp/frontend/src/context/AppContext.js"],"sourcesContent":["import React,{useState, useEffect, createContext} from \"react\";\nimport {ethers} from \"ethers\";\nimport {contractABI, contractAddress} from \"../utils/appUtils\"\nexport const AppContext = createContext();\nconst {ethereum} = window;\n\nexport const AppProvider = ({children}) => {\n    const [wallet, setWallet] = useState(\"\");\n\n    const getEthereumContract = () =>{\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        return contract;\n    }\n    \n    const connectWallet = async() =>{\n        if(!ethereum){\n          alert(\"please download metamask\")\n          return;\n        }\n        const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n        setWallet(accounts[0]);\n    }\n\n    return (\n        <AppContext.Provider value={{wallet,connectWallet,getEthereumContract}}>\n            {children}\n        </AppContext.Provider>  \n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAO,OAAO;AAC9D,SAAQC,MAAM,QAAO,QAAQ;AAC7B,SAAQC,WAAW,EAAEC,eAAe,QAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9D,OAAO,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AACzC,MAAM;EAACO;AAAQ,CAAC,GAAGC,MAAM;AAEzB,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMgB,mBAAmB,GAAGA,CAAA,KAAK;IAC7B,MAAMC,QAAQ,GAAG,IAAId,MAAM,CAACe,SAAS,CAACC,YAAY,CAACV,QAAQ,CAAC;IAC5D,MAAMW,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;IACnC,MAAMC,QAAQ,GAAG,IAAInB,MAAM,CAACoB,QAAQ,CAAClB,eAAe,EAAED,WAAW,EAAEgB,MAAM,CAAC;IAC1E,OAAOE,QAAQ;EACnB,CAAC;EAED,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAU;IAC5B,IAAG,CAACf,QAAQ,EAAC;MACXgB,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMjB,QAAQ,CAACkB,OAAO,CAAC;MAACC,MAAM,EAAE;IAAqB,CAAC,CAAC;IACxEb,SAAS,CAACW,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACInB,OAAA,CAACC,UAAU,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAChB,MAAM;MAACU,aAAa;MAACR;IAAmB,CAAE;IAAAJ,QAAA,EAClEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE9B,CAAC;AAAArB,EAAA,CAxBYF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}